|IIC_demo_top
clk => clk.IN2
rst_n => rst_n.IN2
SCL => SCL.IN1
SDA <> SDA
SEL[0] << display:U_display.SEL
SEL[1] << display:U_display.SEL
SEL[2] << display:U_display.SEL
SEL[3] << display:U_display.SEL
SEL[4] << display:U_display.SEL
SEL[5] << display:U_display.SEL
DIG[0] << display:U_display.DIG
DIG[1] << display:U_display.DIG
DIG[2] << display:U_display.DIG
DIG[3] << display:U_display.DIG
DIG[4] << display:U_display.DIG
DIG[5] << display:U_display.DIG
DIG[6] << display:U_display.DIG
DIG[7] << display:U_display.DIG


|IIC_demo_top|IIC:U_IIC
clk => data_buff.we_a.CLK
clk => data_buff.waddr_a[3].CLK
clk => data_buff.waddr_a[2].CLK
clk => data_buff.waddr_a[1].CLK
clk => data_buff.waddr_a[0].CLK
clk => data_buff.data_a[7].CLK
clk => data_buff.data_a[6].CLK
clk => data_buff.data_a[5].CLK
clk => data_buff.data_a[4].CLK
clk => data_buff.data_a[3].CLK
clk => data_buff.data_a[2].CLK
clk => data_buff.data_a[1].CLK
clk => data_buff.data_a[0].CLK
clk => data_block_0.we_a.CLK
clk => data_block_0.waddr_a[7].CLK
clk => data_block_0.waddr_a[6].CLK
clk => data_block_0.waddr_a[5].CLK
clk => data_block_0.waddr_a[4].CLK
clk => data_block_0.waddr_a[3].CLK
clk => data_block_0.waddr_a[2].CLK
clk => data_block_0.waddr_a[1].CLK
clk => data_block_0.waddr_a[0].CLK
clk => data_block_0.data_a[7].CLK
clk => data_block_0.data_a[6].CLK
clk => data_block_0.data_a[5].CLK
clk => data_block_0.data_a[4].CLK
clk => data_block_0.data_a[3].CLK
clk => data_block_0.data_a[2].CLK
clk => data_block_0.data_a[1].CLK
clk => data_block_0.data_a[0].CLK
clk => data_block_1.we_a.CLK
clk => data_block_1.waddr_a[7].CLK
clk => data_block_1.waddr_a[6].CLK
clk => data_block_1.waddr_a[5].CLK
clk => data_block_1.waddr_a[4].CLK
clk => data_block_1.waddr_a[3].CLK
clk => data_block_1.waddr_a[2].CLK
clk => data_block_1.waddr_a[1].CLK
clk => data_block_1.waddr_a[0].CLK
clk => data_block_1.data_a[7].CLK
clk => data_block_1.data_a[6].CLK
clk => data_block_1.data_a[5].CLK
clk => data_block_1.data_a[4].CLK
clk => data_block_1.data_a[3].CLK
clk => data_block_1.data_a[2].CLK
clk => data_block_1.data_a[1].CLK
clk => data_block_1.data_a[0].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => cnt_data_seq_1[0].CLK
clk => cnt_data_seq_1[1].CLK
clk => cnt_data_seq_1[2].CLK
clk => cnt_data_seq_1[3].CLK
clk => cnt_1s[0].CLK
clk => cnt_1s[1].CLK
clk => cnt_1s[2].CLK
clk => cnt_1s[3].CLK
clk => cnt_1s[4].CLK
clk => cnt_1s[5].CLK
clk => cnt_1s[6].CLK
clk => cnt_1s[7].CLK
clk => cnt_1s[8].CLK
clk => cnt_1s[9].CLK
clk => cnt_1s[10].CLK
clk => cnt_1s[11].CLK
clk => cnt_1s[12].CLK
clk => cnt_1s[13].CLK
clk => cnt_1s[14].CLK
clk => cnt_1s[15].CLK
clk => cnt_1s[16].CLK
clk => cnt_1s[17].CLK
clk => cnt_1s[18].CLK
clk => cnt_1s[19].CLK
clk => cnt_1s[20].CLK
clk => cnt_1s[21].CLK
clk => cnt_1s[22].CLK
clk => cnt_1s[23].CLK
clk => cnt_1s[24].CLK
clk => cnt_1s[25].CLK
clk => data_block_origin[0].CLK
clk => data_block_origin[1].CLK
clk => data_block_origin[2].CLK
clk => data_block_origin[3].CLK
clk => data_block_origin[4].CLK
clk => data_block_origin[5].CLK
clk => data_block_origin[6].CLK
clk => data_block_origin[7].CLK
clk => save_data_num[0].CLK
clk => save_data_num[1].CLK
clk => save_data_num[2].CLK
clk => save_data_num[3].CLK
clk => start_display.CLK
clk => SDA_oe~reg0.CLK
clk => SDA_out~reg0.CLK
clk => pointer_block_1[0].CLK
clk => pointer_block_1[1].CLK
clk => pointer_block_1[2].CLK
clk => pointer_block_1[3].CLK
clk => pointer_block_1[4].CLK
clk => pointer_block_1[5].CLK
clk => pointer_block_1[6].CLK
clk => pointer_block_1[7].CLK
clk => pointer_block_0[0].CLK
clk => pointer_block_0[1].CLK
clk => pointer_block_0[2].CLK
clk => pointer_block_0[3].CLK
clk => pointer_block_0[4].CLK
clk => pointer_block_0[5].CLK
clk => pointer_block_0[6].CLK
clk => pointer_block_0[7].CLK
clk => cnt_data_seq_0[0].CLK
clk => cnt_data_seq_0[1].CLK
clk => cnt_data_seq_0[2].CLK
clk => cnt_data_seq_0[3].CLK
clk => data_num[0].CLK
clk => data_num[1].CLK
clk => data_num[2].CLK
clk => data_num[3].CLK
clk => data_num[4].CLK
clk => pointer_buff[0].CLK
clk => pointer_buff[1].CLK
clk => pointer_buff[2].CLK
clk => pointer_buff[3].CLK
clk => excess_one_byte[0].CLK
clk => excess_one_byte[1].CLK
clk => excess_one_byte[2].CLK
clk => excess_one_byte[3].CLK
clk => excess_one_byte[4].CLK
clk => excess_one_byte[5].CLK
clk => excess_one_byte[6].CLK
clk => excess_one_byte[7].CLK
clk => wr_or_rd.CLK
clk => flag_block.CLK
clk => cnt_bit[0].CLK
clk => cnt_bit[1].CLK
clk => cnt_bit[2].CLK
clk => cnt_bit[3].CLK
clk => cnt_SCL_low[0].CLK
clk => cnt_SCL_low[1].CLK
clk => cnt_SCL_low[2].CLK
clk => cnt_SCL_low[3].CLK
clk => cnt_SCL_low[4].CLK
clk => cnt_SCL_low[5].CLK
clk => cnt_SCL_low[6].CLK
clk => SDA_in_1.CLK
clk => SDA_in_0.CLK
clk => SCL_1.CLK
clk => SCL_0.CLK
clk => state_c[0].CLK
clk => state_c[1].CLK
clk => state_c[2].CLK
clk => state_c[3].CLK
clk => state_c[4].CLK
clk => state_c[5].CLK
clk => state_c[6].CLK
clk => data_buff.CLK0
clk => data_block_0.CLK0
clk => data_block_1.CLK0
rst_n => data_out[0]~reg0.ACLR
rst_n => data_out[1]~reg0.ACLR
rst_n => data_out[2]~reg0.ACLR
rst_n => data_out[3]~reg0.ACLR
rst_n => data_out[4]~reg0.ACLR
rst_n => data_out[5]~reg0.ACLR
rst_n => data_out[6]~reg0.ACLR
rst_n => data_out[7]~reg0.ACLR
rst_n => SDA_oe~reg0.ACLR
rst_n => SDA_out~reg0.ACLR
rst_n => state_c[0].PRESET
rst_n => state_c[1].ACLR
rst_n => state_c[2].ACLR
rst_n => state_c[3].ACLR
rst_n => state_c[4].ACLR
rst_n => state_c[5].ACLR
rst_n => state_c[6].ACLR
rst_n => SCL_1.PRESET
rst_n => SCL_0.PRESET
rst_n => SDA_in_1.PRESET
rst_n => SDA_in_0.PRESET
rst_n => cnt_SCL_low[0].ACLR
rst_n => cnt_SCL_low[1].ACLR
rst_n => cnt_SCL_low[2].ACLR
rst_n => cnt_SCL_low[3].ACLR
rst_n => cnt_SCL_low[4].ACLR
rst_n => cnt_SCL_low[5].ACLR
rst_n => cnt_SCL_low[6].ACLR
rst_n => cnt_bit[0].ACLR
rst_n => cnt_bit[1].ACLR
rst_n => cnt_bit[2].ACLR
rst_n => cnt_bit[3].ACLR
rst_n => flag_block.ACLR
rst_n => wr_or_rd.ACLR
rst_n => excess_one_byte[0].ACLR
rst_n => excess_one_byte[1].ACLR
rst_n => excess_one_byte[2].ACLR
rst_n => excess_one_byte[3].ACLR
rst_n => excess_one_byte[4].ACLR
rst_n => excess_one_byte[5].ACLR
rst_n => excess_one_byte[6].ACLR
rst_n => excess_one_byte[7].ACLR
rst_n => pointer_buff[0].ACLR
rst_n => pointer_buff[1].ACLR
rst_n => pointer_buff[2].ACLR
rst_n => pointer_buff[3].ACLR
rst_n => data_num[0].ACLR
rst_n => data_num[1].ACLR
rst_n => data_num[2].ACLR
rst_n => data_num[3].ACLR
rst_n => data_num[4].ACLR
rst_n => cnt_data_seq_0[0].ACLR
rst_n => cnt_data_seq_0[1].ACLR
rst_n => cnt_data_seq_0[2].ACLR
rst_n => cnt_data_seq_0[3].ACLR
rst_n => pointer_block_0[0].ACLR
rst_n => pointer_block_0[1].ACLR
rst_n => pointer_block_0[2].ACLR
rst_n => pointer_block_0[3].ACLR
rst_n => pointer_block_0[4].ACLR
rst_n => pointer_block_0[5].ACLR
rst_n => pointer_block_0[6].ACLR
rst_n => pointer_block_0[7].ACLR
rst_n => pointer_block_1[0].ACLR
rst_n => pointer_block_1[1].ACLR
rst_n => pointer_block_1[2].ACLR
rst_n => pointer_block_1[3].ACLR
rst_n => pointer_block_1[4].ACLR
rst_n => pointer_block_1[5].ACLR
rst_n => pointer_block_1[6].ACLR
rst_n => pointer_block_1[7].ACLR
rst_n => start_display.ACLR
rst_n => save_data_num[0].ACLR
rst_n => save_data_num[1].ACLR
rst_n => save_data_num[2].ACLR
rst_n => save_data_num[3].ACLR
rst_n => data_block_origin[0].ACLR
rst_n => data_block_origin[1].ACLR
rst_n => data_block_origin[2].ACLR
rst_n => data_block_origin[3].ACLR
rst_n => data_block_origin[4].ACLR
rst_n => data_block_origin[5].ACLR
rst_n => data_block_origin[6].ACLR
rst_n => data_block_origin[7].ACLR
rst_n => cnt_1s[0].ACLR
rst_n => cnt_1s[1].ACLR
rst_n => cnt_1s[2].ACLR
rst_n => cnt_1s[3].ACLR
rst_n => cnt_1s[4].ACLR
rst_n => cnt_1s[5].ACLR
rst_n => cnt_1s[6].ACLR
rst_n => cnt_1s[7].ACLR
rst_n => cnt_1s[8].ACLR
rst_n => cnt_1s[9].ACLR
rst_n => cnt_1s[10].ACLR
rst_n => cnt_1s[11].ACLR
rst_n => cnt_1s[12].ACLR
rst_n => cnt_1s[13].ACLR
rst_n => cnt_1s[14].ACLR
rst_n => cnt_1s[15].ACLR
rst_n => cnt_1s[16].ACLR
rst_n => cnt_1s[17].ACLR
rst_n => cnt_1s[18].ACLR
rst_n => cnt_1s[19].ACLR
rst_n => cnt_1s[20].ACLR
rst_n => cnt_1s[21].ACLR
rst_n => cnt_1s[22].ACLR
rst_n => cnt_1s[23].ACLR
rst_n => cnt_1s[24].ACLR
rst_n => cnt_1s[25].ACLR
rst_n => cnt_data_seq_1[0].ACLR
rst_n => cnt_data_seq_1[1].ACLR
rst_n => cnt_data_seq_1[2].ACLR
rst_n => cnt_data_seq_1[3].ACLR
SCL => idle2start.IN1
SCL => receive_data2start.IN1
SCL => stop2idle.IN1
SCL => SCL_0.DATAIN
SDA_in => SDA_in_0.DATAIN
SDA_out <= SDA_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDA_oe <= SDA_oe~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IIC_demo_top|display:U_display
clk => SEL[0]~reg0.CLK
clk => SEL[1]~reg0.CLK
clk => SEL[2]~reg0.CLK
clk => SEL[3]~reg0.CLK
clk => SEL[4]~reg0.CLK
clk => SEL[5]~reg0.CLK
clk => show_wei.CLK
clk => cnt_flicker[0].CLK
clk => cnt_flicker[1].CLK
clk => cnt_flicker[2].CLK
clk => cnt_flicker[3].CLK
clk => cnt_flicker[4].CLK
clk => cnt_flicker[5].CLK
clk => cnt_flicker[6].CLK
clk => cnt_flicker[7].CLK
clk => cnt_flicker[8].CLK
clk => cnt_flicker[9].CLK
clk => cnt_flicker[10].CLK
clk => cnt_flicker[11].CLK
clk => cnt_flicker[12].CLK
clk => cnt_flicker[13].CLK
clk => cnt_flicker[14].CLK
clk => cnt_flicker[15].CLK
rst_n => cnt_flicker[0].ACLR
rst_n => cnt_flicker[1].ACLR
rst_n => cnt_flicker[2].ACLR
rst_n => cnt_flicker[3].ACLR
rst_n => cnt_flicker[4].ACLR
rst_n => cnt_flicker[5].ACLR
rst_n => cnt_flicker[6].ACLR
rst_n => cnt_flicker[7].ACLR
rst_n => cnt_flicker[8].ACLR
rst_n => cnt_flicker[9].ACLR
rst_n => cnt_flicker[10].ACLR
rst_n => cnt_flicker[11].ACLR
rst_n => cnt_flicker[12].ACLR
rst_n => cnt_flicker[13].ACLR
rst_n => cnt_flicker[14].ACLR
rst_n => cnt_flicker[15].ACLR
rst_n => SEL[0]~reg0.PRESET
rst_n => SEL[1]~reg0.PRESET
rst_n => SEL[2]~reg0.PRESET
rst_n => SEL[3]~reg0.PRESET
rst_n => SEL[4]~reg0.PRESET
rst_n => SEL[5]~reg0.ACLR
rst_n => show_wei.ACLR
data[0] => Selector3.IN5
data[1] => Selector2.IN5
data[2] => Selector1.IN5
data[3] => Selector0.IN5
data[4] => Selector3.IN4
data[5] => Selector2.IN4
data[6] => Selector1.IN4
data[7] => Selector0.IN4
SEL[0] <= SEL[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[1] <= SEL[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[2] <= SEL[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[3] <= SEL[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[4] <= SEL[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEL[5] <= SEL[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DIG[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
DIG[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
DIG[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
DIG[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
DIG[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
DIG[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
DIG[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
DIG[7] <= <VCC>


